{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alist\\\\GitHub\\\\React-Complete-Guide\\\\src\\\\components\\\\Expenses\\\\ExpenseItem.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport ExpenseDate from './ExpenseDate';\nimport Card from '../UI/Card';\nimport './ExpenseItem.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ExpenseItem = props => {\n  _s();\n\n  console.log('ExpenseItem evaluated by React'); // First element is the current state value.\n  // Second element is a function that lets you update the value.\n\n  const [title, setTitle] = useState(props.title);\n  const [amount, setAmount] = useState(props.amount);\n\n  const clickHandler = () => {\n    setTitle('Updated!');\n    setAmount('1.00'); //When we console log the title. It is going to give us the current title\n    //not the new title after using setTitle because the \"set\" method schedules the update I believe.\n\n    console.log(title);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"expense-item\",\n    children: [/*#__PURE__*/_jsxDEV(ExpenseDate, {\n      date: props.date\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"expense-item__description\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"expense-item__price\",\n        children: amount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: clickHandler,\n      children: \"Change Title\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ExpenseItem, \"SNu7szUicuNR3tPw0D5fOFslLFE=\");\n\n_c = ExpenseItem;\nexport default ExpenseItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExpenseItem\");","map":{"version":3,"sources":["C:/Users/alist/GitHub/React-Complete-Guide/src/components/Expenses/ExpenseItem.js"],"names":["React","useState","ExpenseDate","Card","ExpenseItem","props","console","log","title","setTitle","amount","setAmount","clickHandler","date"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAO,mBAAP;;;AAGA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAAA;;AAC7BC,EAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ,EAD6B,CAE7B;AACA;;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAACI,KAAK,CAACG,KAAP,CAAlC;AACA,QAAM,CAACE,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAACI,KAAK,CAACK,MAAP,CAApC;;AAEA,QAAME,YAAY,GAAG,MAAM;AACzBH,IAAAA,QAAQ,CAAC,UAAD,CAAR;AACAE,IAAAA,SAAS,CAAC,MAAD,CAAT,CAFyB,CAGzB;AACA;;AACAL,IAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;AACD,GAND;;AAQA,sBACE,QAAC,IAAD;AAAM,IAAA,SAAS,EAAC,cAAhB;AAAA,4BACE,QAAC,WAAD;AAAa,MAAA,IAAI,EAAEH,KAAK,CAACQ;AAAzB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,2BAAf;AAAA,8BACE;AAAA,kBAAKL;AAAL;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA,kBAAsCE;AAAtC;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAME;AAAQ,MAAA,OAAO,EAAEE,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CAzBD;;GAAMR,W;;KAAAA,W;AA2BN,eAAeA,WAAf","sourcesContent":["import React, { useState } from 'react';\r\n\r\nimport ExpenseDate from './ExpenseDate';\r\nimport Card from '../UI/Card';\r\nimport './ExpenseItem.css';\r\n\r\n\r\nconst ExpenseItem = (props) => {\r\n  console.log('ExpenseItem evaluated by React');\r\n  // First element is the current state value.\r\n  // Second element is a function that lets you update the value.\r\n  const [title, setTitle] = useState(props.title);\r\n  const [amount, setAmount] = useState(props.amount);\r\n\r\n  const clickHandler = () => {\r\n    setTitle('Updated!');\r\n    setAmount('1.00');\r\n    //When we console log the title. It is going to give us the current title\r\n    //not the new title after using setTitle because the \"set\" method schedules the update I believe.\r\n    console.log(title);\r\n  };\r\n\r\n  return (\r\n    <Card className='expense-item'>\r\n      <ExpenseDate date={props.date} />\r\n      <div className='expense-item__description'>\r\n        <h2>{title}</h2>\r\n        <div className='expense-item__price'>{amount}</div>\r\n      </div>\r\n      <button onClick={clickHandler}>Change Title</button>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default ExpenseItem;\r\n"]},"metadata":{},"sourceType":"module"}